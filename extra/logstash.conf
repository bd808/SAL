# Example logstash config

input {
  irc {
    host      => "chat.freenode.net"
    port      => 6697
    secure    => true
    user      => "MY_IRC_USER"
    password  => "MY_IRC_PASSWORD"
    nick      => "MY_IRC_NICK"
    real      => "SOME COOL REAL NAME"
    channels  => [ "#mediawiki", "#wikimedia-dev", "#wikimedia-cloud", "#wikimedia-operations", "#wikimedia-releng" ]
    type      => "irc"
  }
}

filter {
  if [type] == "irc" {
    # Remove IRC formatting codes and tag for indexing
    mutate {
      gsub => [ "message", "[\x02\x0F\x16\x1D\x1F]|\x03(\d{,2}(,\d{,2})?)?", "" ]
    }

    if [message] =~ /^!log / {
      clone {
        clones => [ "sal" ]
      }
    }
  } # end [type] == "irc"

  if [type] == "sal" {
    if [channel] == "#wikimedia-cloud" {
      grok {
        match => [ "message", "^!log %{NOTSPACE:project} %{GREEDYDATA:message}$" ]
        overwrite => [ "message" ]
        named_captures_only => true
      }
    }
    if [channel] == "#wikimedia-releng" {
      grok {
        match => [ "message", "^!log %{GREEDYDATA:message}$" ]
        overwrite => [ "message" ]
        named_captures_only => true
        add_field => [ "project", "releng" ]
      }
    }
    if [channel] == "#wikimedia-operations" {
      grok {
        match => [ "message", "^!log %{GREEDYDATA:message}$" ]
        overwrite => [ "message" ]
        named_captures_only => true
        add_field => [ "project", "production" ]
      }
      if [nick] == "logmsgbot" {
        grok {
          match => [ "message", "^%{NOTSPACE:nick} %{GREEDYDATA:message}$" ]
          overwrite => [ "nick", "message" ]
          named_captures_only => true
        }
      }
    }
  } # end [type] == "sal"
}

output {
  if [type] == "sal" {
    elasticsearch {
      flush_size      => 5000
      host            => "127.0.0.1"
      idle_flush_time => 1
      index           => "sal"
      port            => 9200
      protocol        => "http"
    }
  }
}
